# Use the official ROS Noetic image as the base
FROM osrf/ros:noetic-desktop-full AS ros

ENV DEBIAN_FRONTEND=noninteractive

# Install RViz and necessary packages for software rendering and debugging
RUN apt-get update && apt-get install -y \
    curl \
    gnupg2 \
    lsb-release \
    bash-completion \
    ros-${ROS_DISTRO}-image-transport-plugins \
    python3-wstool \
    python3-rosdep \
    python3-rosinstall \
    python3-rosinstall-generator \
    python3-dev \
    python3-pip \
    libgl1-mesa-dri \
    libglvnd0 \
    libgl1 \
    libglx0 \
    libegl1 \
    libxext6 \
    libx11-6 \
    bash-completion \
    iputils-ping \
    net-tools \
    iproute2 \
    git \
    wget \
    && rm -rf /var/lib/apt/lists/*

# Set up environment variables
ENV ROS_DISTRO noetic
ENV LIBGL_ALWAYS_SOFTWARE 1
ENV DISPLAY=:0

FROM ros AS python_dep

# Create catkin workspace and package directories
RUN mkdir -p /app/catkin_ws/src/


WORKDIR /app/catkin_ws
COPY req.txt /app/req.txt
RUN pip3 install -r /app/req.txt

RUN groupadd -g 1000 ros_user && \
    useradd -u 1000 -g 1000 -m -s /bin/bash ros_user

# Set proper permissions for the workspace - make it writable for ros_user
RUN chmod -R 777 /app && \
    chown -R ros_user:ros_user /app

CMD ["/bin/bash"]
